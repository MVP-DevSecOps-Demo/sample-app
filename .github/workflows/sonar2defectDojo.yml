name: CodeQL + SonarQube + DefectDojo Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 2 * * 1'  # every Monday 2 AM

jobs:
  security-pipeline:
    runs-on: ubuntu-latest
    env:
      SONAR_HOST_URL: https://sonarcloud.io
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_PROJECT_KEY: MVP-DevSecOps-Demo_sample-app
      DOJO_URL: ${{ secrets.DOJO_URL }}
      DOJO_API_KEY: ${{ secrets.DOJO_API_KEY }}
      DOJO_ENGAGEMENT_ID: 3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # âœ… Cache global npm packages (for sonar-scanner)
      - name: Cache sonar-scanner
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-sonar

      # âœ… Install only if missing
      - name: Ensure dependencies
        run: |
          if ! command -v jq &> /dev/null; then
            sudo apt-get update && sudo apt-get install -y jq
          fi
          if ! command -v sonar-scanner &> /dev/null; then
            npm install -g sonar-scanner
          fi

      # ðŸ§  Run SonarQube analysis
      - name: Run SonarQube Scan
        run: |
          sonar-scanner \
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=mvpdemo \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
            -Dsonar.login=${{ env.SONAR_TOKEN }} \
            -Dsonar.projectBaseDir=.

      # ðŸ§¾ Export Sonar findings (convert to JSON for DefectDojo)
      - name: Convert Sonar Report to JSON
        run: |
          mkdir -p reports
          sonar-report-converter --input sonar-report.xml --output reports/sonar-findings.json || echo "{}" > reports/sonar-findings.json

      # ðŸ“¤ Upload findings to DefectDojo
      - name: Upload findings to DefectDojo
        run: |
          echo "Uploading SonarQube findings to DefectDojo..."
          curl -X POST "${{ env.DOJO_URL }}/api/v2/import-scan/" \
            -H "Authorization: Token ${{ env.DOJO_API_KEY }}" \
            -F "engagement=${{ env.DOJO_ENGAGEMENT_ID }}" \
            -F "scan_type=Generic Findings Import" \
            -F "active=true" \
            -F "verified=false" \
            -F "file=@reports/sonar-findings.json"
